ARG R_VERSION
FROM hmdc/heroku-docker-r:$R_VERSION
COPY run_r_workers.sh startup.sh /usr/bin/

# on build, copy application files
RUN apt-get -y update; \
    apt-get -y install apache2 libapache2-mod-auth-cas -qy --no-install-recommends; \
    apt-get autoclean; \
    rm -rf /var/lib/apt/lists/*; \
    mkdir -p /app/apache/logs /app/apache/var/cache /app/apache/etc/apache2 /var/run/apache2; \
    chmod a+x /usr/bin/run_r_workers.sh; \
    chmod a+x /usr/bin/startup.sh; \
    mkdir /app/packrat
COPY config/httpd.conf /app/apache/etc/apache2/httpd.conf

ONBUILD COPY Dockerfile .Rprofile* init.R* onbuild* Aptfile* /app/
ONBUILD COPY Dockerfile packra[t] /app/packrat/
# on build, for installing additional dependencies etc.
ONBUILD RUN /usr/bin/R --no-save --quiet --slave -e "install.packages(c('packrat', 'jsonlite'))";
ONBUILD RUN if [ -f "/app/onbuild" ]; then bash /app/onbuild; fi;
# on build, for backward compatibility, look for /app/Aptfile and if it exists, install the packages contained
ONBUILD RUN if [ -f "/app/Aptfile" ]; then apt-get update -q && cat Aptfile | xargs apt-get -qy install && rm -rf /var/lib/apt/lists/*; fi;
ONBUILD RUN if [ -f "/app/init.R" ]; then /usr/bin/R --no-init-file --no-save --quiet --slave -f /app/init.R; fi;
ONBUILD RUN if [ -f "/app/packrat/packrat.lock" ]; then apt-get update -q; /usr/bin/findSystemDependencies.sh; /usr/bin/R --no-save --quiet --slave -e "packrat::restore()"; fi
ONBUILD COPY . /app
ONBUILD RUN if [ ! -f "/app/packrat/packrat.lock" ]; then apt-get update -q; /usr/bin/findSystemDependencies.sh; /usr/bin/R --no-save --quiet --slave -e "packrat::init(); packrat::snapshot()"; fi
ONBUILD RUN if [ ! -f "/app/.Rprofile" ]; then /usr/bin/R --no-save --quiet --slave -e "packrat::packify()"; echo "packrat::on()" >> /app/.Rprofile; fi
CMD /usr/bin/startup.sh
